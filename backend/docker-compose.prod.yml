version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: scpper_postgres
    environment:
      POSTGRES_DB: scpper_cn
      POSTGRES_USER: scpper_user
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-scpper_secure_password}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backups:/backups
    ports:
      - "5432:5432"
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U scpper_user -d scpper_cn"]
      interval: 30s
      timeout: 10s
      retries: 3

  scpper-sync:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: scpper_sync
    environment:
      NODE_ENV: production
      DATABASE_URL: postgresql://scpper_user:${POSTGRES_PASSWORD:-scpper_secure_password}@postgres:5432/scpper_cn
      CROM_API_URL: https://apiv1.crom.avn.sh/graphql
      TARGET_SITE_URL: http://scp-wiki-cn.wikidot.com
      MAX_REQUESTS_PER_SECOND: 1.8
      BATCH_SIZE: 10
    volumes:
      - ./sync-logs:/app/sync-logs
      - ./data-backups:/app/data-backups
      - ./config:/app/config
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
    command: ["node", "src/sync/database-sync.js"]
    healthcheck:
      test: ["CMD", "node", "-e", "process.exit(0)"]
      interval: 60s
      timeout: 30s
      retries: 3

  scpper-analysis:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: scpper_analysis
    environment:
      NODE_ENV: production
      DATABASE_URL: postgresql://scpper_user:${POSTGRES_PASSWORD:-scpper_secure_password}@postgres:5432/scpper_cn
    volumes:
      - ./user-analysis:/app/user-analysis
      - ./visualization-data:/app/visualization-data
    depends_on:
      postgres:
        condition: service_healthy
    restart: "no"
    command: ["node", "src/analysis/user-analytics.js"]
    profiles:
      - analysis

  nginx:
    image: nginx:alpine
    container_name: scpper_nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/ssl/certs
    depends_on:
      - scpper-sync
    restart: unless-stopped
    profiles:
      - web

volumes:
  postgres_data:
    driver: local

networks:
  default:
    name: scpper_network